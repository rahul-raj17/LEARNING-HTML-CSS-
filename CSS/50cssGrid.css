/* CSS Grid is the new Layout Model in CSS.
From OCT 2017 all major browser started supporting CSS Grid 

Difference between Flexbox and Grid Layout
Figure 1 Representative Flex Layout Example
Figure 2 Representative Grid Layout Example

Both Flexbox and css grid has its own importance and should be used 
for designing a web page.
Grid works for 2 dimensional aligment
Flexbox is good for space distribution

Grid Columns
• The vertical lines of grid items are called columns.

Grid Rows
• The horizontal lines of grid items are called rows.

Grid Gaps
• The spaces between each column/row are called gaps.


Grid Lines
• The lines between columns are called column lines.
The lines between rows are called row lines.


*/

.grid-container{
    background-color: indianred;
    padding: 20px;
    display: grid;
    /* display: inline-grid; */
    /* grid-template-columns: 200px 300px 200px; */
    /* grid-template-columns: auto 50% auto; */
    /* grid-template-rows:100px 200px auto ; */
    /* grid-column-gap: 10px;
    grid-row-gap: 10px; */
    /* justify-content: start; */
    /* justify-content: space-between; */
    /* justify-content: space-evenly;
    height: 400px; */
    /* align-content: start; */
    /* align-content: end; */
    /* align-content: space-between; */
    /* align-content: space-evenly; */

    grid-template-areas: 
    'header header header header header header'
    'menu main main main right right'
    'menu  footer footer footer footer footer';

    grid-gap:10px ;
}

.grid-item{
    background-color: wheat;
    border: 1px solid black;
    padding: 20px;
    font-size: 40px;
    text-align: center;
    
}

/* #grid-1{ */
    /* grid-column-start: 1;
    grid-column-end: 3; */
    /* grid-column: 1/3; */
    /* grid-column: 1/span 2; */
    /* grid-column: 1/span 3; */

    /* grid-row-start: 1;
    grid-row-end: 3; */

    /* grid-row: 1/2; */
/* } */

 /* #grid-5{ */
    /* grid-area: 1/2/3/4; */
    /* grid-area: 1/2/span 2/span 3;
} */ 

#grid-1{
    grid-area: header;
}
#grid-2{
    grid-area: menu;
}
#grid-3{
    grid-area: main;
}
#grid-4{
    grid-area: right;
}
#grid-5{
    grid-area: footer;
}